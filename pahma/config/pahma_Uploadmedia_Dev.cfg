# this is the config file for the batch component of the BMU
# the online portion (i.e. the webapp) is a Django webapp and is configured with
# those webapps
[info]
logo              = https://pahma.cspace.berkeley.edu/collectionspace/ui/pahma/images/header-logo.png
schemacolor1      = #660000
# set the serverlabel value to indicate this .cfg file does NOT configure a webapp
serverlabel       = notawebapp
serverlabelcolor  = green
institution       = pahma
apptitle          = Bulk Upload Media Batch Component
updatetype        = bmu
updateactionlabel =

# set the following to True to allow Media records to be created even if the corresponding objects are not found
alwayscreatemedia = False

[connect]
# note that ,for now, in all cases, the password for the reporter user must be included
# even though it is already in .pgpass. For some reason, the application owner "app_webapps"
# cannot access it when the process is run under wsgi.
#
# the following connect string is useful for connecting via a tunnel, if you are doing development
# connect_string    = host=localhost port=56566 dbname=pahma_domain_pahma user=reporter_pahma sslmode=require password=xxxx
# the following connect string is the one you'd use for a deployment on cspace-dev
connect_string    = host=dba-postgres-dev-42.ist.berkeley.edu port=5113 dbname=pahma_domain_pahma user=reporter_pahma sslmode=require password=xxxxx
# the following connect string is the one you'd use for a deployment on cspace-prod
#connect_string    = host=dba-postgres-prod-42.ist.berkeley.edu port=5313 dbname=pahma_domain_pahma user=reporter_pahma sslmode=require password=xxxxx

# the following values need to be set so that the BMU can POST images and metadata to the
# Blob and Media services
realm             = org.collectionspace.services
hostname          = pahma-dev.cspace.berkeley.edu
protocol          = https
port              =
username          = xxx@berkeley.edu
password          = xxx


[files]
directory         = /tmp/image_upload_cache_pahma
